{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th Sem\\\\Minor Project\\\\Decentralized-Voting-System\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect, useCallback } from 'react';\nimport { ethers } from 'ethers';\nimport { db } from './FirebaseConfig';\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\nimport VotingArtifact from './contracts/Voting.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [contract, setContract] = useState(null);\n  const [candidates, setCandidates] = useState([]);\n  const loadCandidates = useCallback(async contractInstance => {\n    try {\n      setLoading(true);\n      const count = await contractInstance.candidateCount();\n      const loadedCandidates = [];\n      for (let i = 1; i <= count; i++) {\n        const candidate = await contractInstance.candidates(i);\n        loadedCandidates.push({\n          id: i,\n          name: candidate.name,\n          voteCount: candidate.voteCount.toString()\n        });\n      }\n      setCandidates(loadedCandidates);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error loading candidates:\", err);\n      setError(\"Failed to load candidates\");\n      setLoading(false);\n    }\n  }, []);\n  const saveVoteToDB = useCallback(async candidateId => {\n    try {\n      await addDoc(collection(db, \"votes\"), {\n        candidateId,\n        voter: account,\n        timestamp: new Date()\n      });\n    } catch (e) {\n      console.error(\"Error saving vote: \", e);\n      setError(\"Failed to save vote record\");\n    }\n  }, [account]);\n  const vote = useCallback(async candidateId => {\n    try {\n      setLoading(true);\n      await contract.vote(candidateId);\n      await saveVoteToDB(candidateId);\n      await loadCandidates(contract);\n    } catch (err) {\n      console.error(\"Error voting:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [contract, saveVoteToDB, loadCandidates]);\n  useEffect(() => {\n    const initContract = async () => {\n      try {\n        if (!window.ethereum) throw new Error(\"Install MetaMask!\");\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, VotingArtifact.abi, signer);\n        setContract(contract);\n        await loadCandidates(contract);\n\n        // Get initial account\n        const accounts = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        if (accounts.length > 0) {\n          setAccount(accounts[0]);\n        }\n\n        // Handle account changes\n        const handleAccountsChanged = accounts => {\n          setAccount(accounts[0] || '');\n          window.location.reload();\n        };\n        window.ethereum.on('accountsChanged', handleAccountsChanged);\n        return () => {\n          window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        };\n      } catch (err) {\n        console.error(\"Initialization error:\", err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    initContract();\n  }, [loadCandidates]);\n  useEffect(() => {\n    if (!db) {\n      console.error(\"Firebase not initialized!\");\n      return;\n    }\n    const unsubscribe = onSnapshot(collection(db, \"votes\"), snapshot => {\n      snapshot.docChanges().forEach(change => {\n        if (change.type === \"added\") {\n          console.log(\"New vote:\", change.doc.data());\n        }\n      });\n    });\n    return () => unsubscribe();\n  }, []);\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n    } catch (err) {\n      console.error(\"Error connecting wallet:\", err);\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Decentralized Voting System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"candidates-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Candidates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), candidates.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [candidate.name, \" - Votes: \", candidate.voteCount, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => vote(candidate.id),\n              disabled: !account || loading,\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this)]\n          }, candidate.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No candidates found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sxEnvjX4O7+rZoVIdJF+wn0tweI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","ethers","db","collection","addDoc","onSnapshot","VotingArtifact","jsxDEV","_jsxDEV","contractAddress","App","_s","account","setAccount","error","setError","loading","setLoading","contract","setContract","candidates","setCandidates","loadCandidates","contractInstance","count","candidateCount","loadedCandidates","i","candidate","push","id","name","voteCount","toString","err","console","saveVoteToDB","candidateId","voter","timestamp","Date","e","vote","message","initContract","window","ethereum","Error","provider","BrowserProvider","signer","getSigner","Contract","abi","accounts","request","method","length","handleAccountsChanged","location","reload","on","removeListener","unsubscribe","snapshot","docChanges","forEach","change","type","log","doc","data","connectWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","disabled","_c","$RefreshReg$"],"sources":["D:/5th Sem/Minor Project/Decentralized-Voting-System/client/src/App.jsx"],"sourcesContent":["import './App.css';\nimport { useState, useEffect, useCallback } from 'react';\nimport { ethers } from 'ethers';\nimport { db } from './FirebaseConfig';\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\nimport VotingArtifact from './contracts/Voting.json';\n\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [contract, setContract] = useState(null);\n  const [candidates, setCandidates] = useState([]);\n\n  const loadCandidates = useCallback(async (contractInstance) => {\n    try {\n      setLoading(true);\n      const count = await contractInstance.candidateCount();\n      const loadedCandidates = [];\n      \n      for (let i = 1; i <= count; i++) {\n        const candidate = await contractInstance.candidates(i);\n        loadedCandidates.push({\n          id: i,\n          name: candidate.name,\n          voteCount: candidate.voteCount.toString()\n        });\n      }\n      \n      setCandidates(loadedCandidates);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error loading candidates:\", err);\n      setError(\"Failed to load candidates\");\n      setLoading(false);\n    }\n  }, []);\n\n  const saveVoteToDB = useCallback(async (candidateId) => {\n    try {\n      await addDoc(collection(db, \"votes\"), {\n        candidateId,\n        voter: account,\n        timestamp: new Date()\n      });\n    } catch (e) {\n      console.error(\"Error saving vote: \", e);\n      setError(\"Failed to save vote record\");\n    }\n  }, [account]);\n\n  const vote = useCallback(async (candidateId) => {\n    try {\n      setLoading(true);\n      await contract.vote(candidateId);\n      await saveVoteToDB(candidateId);\n      await loadCandidates(contract);\n    } catch (err) {\n      console.error(\"Error voting:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [contract, saveVoteToDB, loadCandidates]);\n\n  useEffect(() => {\n    const initContract = async () => {\n      try {\n        if (!window.ethereum) throw new Error(\"Install MetaMask!\");\n\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(\n          contractAddress,\n          VotingArtifact.abi,\n          signer\n        );\n        \n        setContract(contract);\n        await loadCandidates(contract);\n        \n        // Get initial account\n        const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n        if (accounts.length > 0) {\n          setAccount(accounts[0]);\n        }\n\n        // Handle account changes\n        const handleAccountsChanged = (accounts) => {\n          setAccount(accounts[0] || '');\n          window.location.reload();\n        };\n\n        window.ethereum.on('accountsChanged', handleAccountsChanged);\n        \n        return () => {\n          window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        };\n      } catch (err) {\n        console.error(\"Initialization error:\", err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    initContract();\n  }, [loadCandidates]);\n\n  useEffect(() => {\n    if (!db) {\n      console.error(\"Firebase not initialized!\");\n      return;\n    }\n\n    const unsubscribe = onSnapshot(collection(db, \"votes\"), (snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === \"added\") {\n          console.log(\"New vote:\", change.doc.data());\n        }\n      });\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n    } catch (err) {\n      console.error(\"Error connecting wallet:\", err);\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Decentralized Voting System</h1>\n        \n        {!account ? (\n          <button onClick={connectWallet}>Connect Wallet</button>\n        ) : (\n          <p>Connected Account: {account}</p>\n        )}\n\n        {error && <p className=\"error\">{error}</p>}\n\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <div className=\"candidates-list\">\n            <h2>Candidates</h2>\n            {candidates.length > 0 ? (\n              <ul>\n                {candidates.map((candidate) => (\n                  <li key={candidate.id}>\n                    {candidate.name} - Votes: {candidate.voteCount}\n                    <button \n                      onClick={() => vote(candidate.id)} \n                      disabled={!account || loading}\n                    >\n                      Vote\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <p>No candidates found</p>\n            )}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}