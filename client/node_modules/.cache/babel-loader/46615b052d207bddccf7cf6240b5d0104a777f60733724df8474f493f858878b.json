{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th Sem\\\\Minor Project\\\\Decentralized-Voting-System\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect, useCallback } from 'react';\nimport { ethers } from 'ethers';\nimport { db } from './FirebaseConfig';\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\nimport VotingArtifact from './contracts/Voting.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [contract, setContract] = useState(null);\n  const [candidates, setCandidates] = useState([]);\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [network, setNetwork] = useState('');\n\n  // Initialize contract and load data\n  useEffect(() => {\n    const initContract = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        if (!window.ethereum) {\n          throw new Error(\"Please install MetaMask!\");\n        }\n\n        // Check network\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const network = await provider.getNetwork();\n        setNetwork(network.name);\n\n        // Initialize contract\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, VotingArtifact.abi, signer);\n\n        // Verify contract has required methods\n        if (!contract.candidateCount) {\n          throw new Error(\"Contract ABI doesn't include candidateCount method\");\n        }\n        setContract(contract);\n        await loadCandidates(contract);\n\n        // Handle accounts\n        const accounts = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        if (accounts.length > 0) {\n          setAccount(accounts[0]);\n        }\n\n        // Set up event listeners\n        window.ethereum.on('accountsChanged', accounts => {\n          setAccount(accounts[0] || '');\n        });\n        window.ethereum.on('chainChanged', () => {\n          window.location.reload();\n        });\n      } catch (err) {\n        console.error(\"Initialization error:\", err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initContract();\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners();\n      }\n    };\n  }, []);\n  const loadCandidates = useCallback(async contractInstance => {\n    try {\n      setLoading(true);\n      setError('');\n      const count = await contractInstance.candidateCount();\n      const loadedCandidates = [];\n      let votes = 0;\n      for (let i = 1; i <= count; i++) {\n        const candidate = await contractInstance.candidates(i);\n        loadedCandidates.push({\n          id: i,\n          name: candidate.name,\n          voteCount: candidate.voteCount.toString()\n        });\n        votes += parseInt(candidate.voteCount.toString());\n      }\n      setCandidates(loadedCandidates);\n      setTotalVotes(votes);\n    } catch (err) {\n      console.error(\"Error loading candidates:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const saveVoteToDB = useCallback(async candidateId => {\n    try {\n      await addDoc(collection(db, \"votes\"), {\n        candidateId,\n        voter: account,\n        timestamp: new Date()\n      });\n    } catch (e) {\n      console.error(\"Error saving vote: \", e);\n      setError(\"Failed to save vote record\");\n    }\n  }, [account]);\n  const vote = useCallback(async candidateId => {\n    if (!contract) {\n      setError(\"Contract not initialized\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n      const tx = await contract.vote(candidateId);\n      await tx.wait();\n      await saveVoteToDB(candidateId);\n      await loadCandidates(contract);\n    } catch (err) {\n      console.error(\"Error voting:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [contract, saveVoteToDB, loadCandidates]);\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n    } catch (err) {\n      console.error(\"Error connecting wallet:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading voting system...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render main interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Decentralized Voting System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect-button\",\n          onClick: connectWallet,\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"account-badge\",\n            children: `${account.substring(0, 6)}...${account.substring(38)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"network-badge\",\n            children: network\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(''),\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voting-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Candidates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"total-votes\",\n          children: [\"Total Votes: \", totalVotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), candidates.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"candidates-grid\",\n          children: candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"candidate-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: candidate.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ID: \", candidate.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Votes: \", candidate.voteCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vote-button\",\n              onClick: () => vote(candidate.id),\n              disabled: !account || loading,\n              children: loading ? 'Processing...' : 'Vote'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, candidate.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-candidates\",\n          children: contract ? 'No candidates found' : 'Contract not loaded'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vhbGUgnZpV2Vn8zsaR/VKIuYZHo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","ethers","db","collection","addDoc","onSnapshot","VotingArtifact","jsxDEV","_jsxDEV","Fragment","_Fragment","contractAddress","App","_s","account","setAccount","error","setError","loading","setLoading","contract","setContract","candidates","setCandidates","totalVotes","setTotalVotes","network","setNetwork","initContract","window","ethereum","Error","provider","BrowserProvider","getNetwork","name","signer","getSigner","Contract","abi","candidateCount","loadCandidates","accounts","request","method","length","on","location","reload","err","console","message","removeAllListeners","contractInstance","count","loadedCandidates","votes","i","candidate","push","id","voteCount","toString","parseInt","saveVoteToDB","candidateId","voter","timestamp","Date","e","vote","tx","wait","connectWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","substring","map","disabled","_c","$RefreshReg$"],"sources":["D:/5th Sem/Minor Project/Decentralized-Voting-System/client/src/App.jsx"],"sourcesContent":["import './App.css';\nimport { useState, useEffect, useCallback } from 'react';\nimport { ethers } from 'ethers';\nimport { db } from './FirebaseConfig';\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\nimport VotingArtifact from './contracts/Voting.json';\n\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [contract, setContract] = useState(null);\n  const [candidates, setCandidates] = useState([]);\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [network, setNetwork] = useState('');\n\n  // Initialize contract and load data\n  useEffect(() => {\n    const initContract = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        \n        if (!window.ethereum) {\n          throw new Error(\"Please install MetaMask!\");\n        }\n\n        // Check network\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const network = await provider.getNetwork();\n        setNetwork(network.name);\n\n        // Initialize contract\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(\n          contractAddress,\n          VotingArtifact.abi,\n          signer\n        );\n\n        // Verify contract has required methods\n        if (!contract.candidateCount) {\n          throw new Error(\"Contract ABI doesn't include candidateCount method\");\n        }\n\n        setContract(contract);\n        await loadCandidates(contract);\n\n        // Handle accounts\n        const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n        if (accounts.length > 0) {\n          setAccount(accounts[0]);\n        }\n\n        // Set up event listeners\n        window.ethereum.on('accountsChanged', (accounts) => {\n          setAccount(accounts[0] || '');\n        });\n\n        window.ethereum.on('chainChanged', () => {\n          window.location.reload();\n        });\n\n      } catch (err) {\n        console.error(\"Initialization error:\", err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initContract();\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners();\n      }\n    };\n  }, []);\n\n  const loadCandidates = useCallback(async (contractInstance) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      const count = await contractInstance.candidateCount();\n      const loadedCandidates = [];\n      let votes = 0;\n      \n      for (let i = 1; i <= count; i++) {\n        const candidate = await contractInstance.candidates(i);\n        loadedCandidates.push({\n          id: i,\n          name: candidate.name,\n          voteCount: candidate.voteCount.toString()\n        });\n        votes += parseInt(candidate.voteCount.toString());\n      }\n      \n      setCandidates(loadedCandidates);\n      setTotalVotes(votes);\n    } catch (err) {\n      console.error(\"Error loading candidates:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const saveVoteToDB = useCallback(async (candidateId) => {\n    try {\n      await addDoc(collection(db, \"votes\"), {\n        candidateId,\n        voter: account,\n        timestamp: new Date()\n      });\n    } catch (e) {\n      console.error(\"Error saving vote: \", e);\n      setError(\"Failed to save vote record\");\n    }\n  }, [account]);\n\n  const vote = useCallback(async (candidateId) => {\n    if (!contract) {\n      setError(\"Contract not initialized\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      \n      const tx = await contract.vote(candidateId);\n      await tx.wait();\n      await saveVoteToDB(candidateId);\n      await loadCandidates(contract);\n    } catch (err) {\n      console.error(\"Error voting:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [contract, saveVoteToDB, loadCandidates]);\n\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({ \n        method: 'eth_requestAccounts' \n      });\n      setAccount(accounts[0]);\n    } catch (err) {\n      console.error(\"Error connecting wallet:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Render loading state\n  if (loading) {\n    return (\n      <div className=\"app-container\">\n        <div className=\"loading-screen\">\n          <div className=\"spinner\"></div>\n          <p>Loading voting system...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Render main interface\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>Decentralized Voting System</h1>\n        \n        <div className=\"wallet-info\">\n          {!account ? (\n            <button className=\"connect-button\" onClick={connectWallet}>\n              Connect Wallet\n            </button>\n          ) : (\n            <>\n              <span className=\"account-badge\">\n                {`${account.substring(0, 6)}...${account.substring(38)}`}\n              </span>\n              <span className=\"network-badge\">{network}</span>\n            </>\n          )}\n        </div>\n\n        {error && (\n          <div className=\"error-message\">\n            <p>{error}</p>\n            <button onClick={() => setError('')}>Dismiss</button>\n          </div>\n        )}\n\n        <div className=\"voting-section\">\n          <h2>Candidates</h2>\n          <p className=\"total-votes\">Total Votes: {totalVotes}</p>\n          \n          {candidates.length > 0 ? (\n            <div className=\"candidates-grid\">\n              {candidates.map((candidate) => (\n                <div key={candidate.id} className=\"candidate-card\">\n                  <h3>{candidate.name}</h3>\n                  <p>ID: {candidate.id}</p>\n                  <p>Votes: {candidate.voteCount}</p>\n                  <button\n                    className=\"vote-button\"\n                    onClick={() => vote(candidate.id)}\n                    disabled={!account || loading}\n                  >\n                    {loading ? 'Processing...' : 'Vote'}\n                  </button>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"no-candidates\">\n              {contract ? 'No candidates found' : 'Contract not loaded'}\n            </p>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}